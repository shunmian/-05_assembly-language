
final:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 f4                	add    %dh,%ah
 8048199:	f6 c2 c0             	test   $0xc0,%dl
 804819c:	b7 cb                	mov    $0xcb,%bh
 804819e:	25 6b 37 71 06       	and    $0x671376b,%eax
 80481a3:	79 2a                	jns    80481cf <_init-0xd9>
 80481a5:	b9 f5 c4 cc bf       	mov    $0xbfccc4f5,%ecx
 80481aa:	eb c3                	jmp    804816f <_init-0x139>

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	04 00                	add    $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 04 00             	add    %al,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x11c>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	31 00                	xor    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	20 00                	and    %al,(%eax)
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	1f                   	pop    %ds
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 0b                	add    %cl,(%ebx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 0c 85 04 08 04 00 	add    %cl,0x40804(,%eax,4)
 8048216:	00 00                	add    %al,(%eax)
 8048218:	11 00                	adc    %eax,(%eax)
 804821a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048220:	63 2e                	arpl   %bp,(%esi)
 8048222:	73 6f                	jae    8048293 <_init-0x15>
 8048224:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048229:	4f                   	dec    %edi
 804822a:	5f                   	pop    %edi
 804822b:	73 74                	jae    80482a1 <_init-0x7>
 804822d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048234:	64 
 8048235:	00 70 75             	add    %dh,0x75(%eax)
 8048238:	74 73                	je     80482ad <_init+0x5>
 804823a:	00 5f 5f             	add    %bl,0x5f(%edi)
 804823d:	6c                   	insb   (%dx),%es:(%edi)
 804823e:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048245:	72 74                	jb     80482bb <_init+0x13>
 8048247:	5f                   	pop    %edi
 8048248:	6d                   	insl   (%dx),%es:(%edi)
 8048249:	61                   	popa   
 804824a:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 8048251:	6f                   	outsl  %ds:(%esi),(%dx)
 8048252:	6e                   	outsb  %ds:(%esi),(%dx)
 8048253:	5f                   	pop    %edi
 8048254:	73 74                	jae    80482ca <_init+0x22>
 8048256:	61                   	popa   
 8048257:	72 74                	jb     80482cd <_init+0x25>
 8048259:	5f                   	pop    %edi
 804825a:	5f                   	pop    %edi
 804825b:	00 47 4c             	add    %al,0x4c(%edi)
 804825e:	49                   	dec    %ecx
 804825f:	42                   	inc    %edx
 8048260:	43                   	inc    %ebx
 8048261:	5f                   	pop    %edi
 8048262:	32 2e                	xor    (%esi),%ch
 8048264:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048266 <.gnu.version>:
 8048266:	00 00                	add    %al,(%eax)
 8048268:	02 00                	add    (%eax),%al
 804826a:	00 00                	add    %al,(%eax)
 804826c:	02 00                	add    (%eax),%al
 804826e:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048270 <.gnu.version_r>:
 8048270:	01 00                	add    %eax,(%eax)
 8048272:	01 00                	add    %eax,(%eax)
 8048274:	01 00                	add    %eax,(%eax)
 8048276:	00 00                	add    %al,(%eax)
 8048278:	10 00                	adc    %al,(%eax)
 804827a:	00 00                	add    %al,(%eax)
 804827c:	00 00                	add    %al,(%eax)
 804827e:	00 00                	add    %al,(%eax)
 8048280:	10 69 69             	adc    %ch,0x69(%ecx)
 8048283:	0d 00 00 02 00       	or     $0x20000,%eax
 8048288:	40                   	inc    %eax
 8048289:	00 00                	add    %al,(%eax)
 804828b:	00 00                	add    %al,(%eax)
 804828d:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

08048290 <.rel.dyn>:
 8048290:	fc                   	cld    
 8048291:	9f                   	lahf   
 8048292:	04 08                	add    $0x8,%al
 8048294:	06                   	push   %es
 8048295:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

08048298 <.rel.plt>:
 8048298:	0c a0                	or     $0xa0,%al
 804829a:	04 08                	add    $0x8,%al
 804829c:	07                   	pop    %es
 804829d:	01 00                	add    %eax,(%eax)
 804829f:	00 10                	add    %dl,(%eax)
 80482a1:	a0 04 08 07 03       	mov    0x3070804,%al
	...

Disassembly of section .init:

080482a8 <_init>:
 80482a8:	53                   	push   %ebx
 80482a9:	83 ec 08             	sub    $0x8,%esp
 80482ac:	e8 8f 00 00 00       	call   8048340 <__x86.get_pc_thunk.bx>
 80482b1:	81 c3 4f 1d 00 00    	add    $0x1d4f,%ebx
 80482b7:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482bd:	85 c0                	test   %eax,%eax
 80482bf:	74 05                	je     80482c6 <_init+0x1e>
 80482c1:	e8 3a 00 00 00       	call   8048300 <__libc_start_main@plt+0x10>
 80482c6:	83 c4 08             	add    $0x8,%esp
 80482c9:	5b                   	pop    %ebx
 80482ca:	c3                   	ret    

Disassembly of section .plt:

080482d0 <puts@plt-0x10>:
 80482d0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482d6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482dc:	00 00                	add    %al,(%eax)
	...

080482e0 <puts@plt>:
 80482e0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482e6:	68 00 00 00 00       	push   $0x0
 80482eb:	e9 e0 ff ff ff       	jmp    80482d0 <_init+0x28>

080482f0 <__libc_start_main@plt>:
 80482f0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80482f6:	68 08 00 00 00       	push   $0x8
 80482fb:	e9 d0 ff ff ff       	jmp    80482d0 <_init+0x28>

Disassembly of section .plt.got:

08048300 <.plt.got>:
 8048300:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048306:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048310 <_start>:
 8048310:	31 ed                	xor    %ebp,%ebp
 8048312:	5e                   	pop    %esi
 8048313:	89 e1                	mov    %esp,%ecx
 8048315:	83 e4 f0             	and    $0xfffffff0,%esp
 8048318:	50                   	push   %eax
 8048319:	54                   	push   %esp
 804831a:	52                   	push   %edx
 804831b:	68 f0 84 04 08       	push   $0x80484f0
 8048320:	68 90 84 04 08       	push   $0x8048490
 8048325:	51                   	push   %ecx
 8048326:	56                   	push   %esi
 8048327:	68 0b 84 04 08       	push   $0x804840b
 804832c:	e8 bf ff ff ff       	call   80482f0 <__libc_start_main@plt>
 8048331:	f4                   	hlt    
 8048332:	66 90                	xchg   %ax,%ax
 8048334:	66 90                	xchg   %ax,%ax
 8048336:	66 90                	xchg   %ax,%ax
 8048338:	66 90                	xchg   %ax,%ax
 804833a:	66 90                	xchg   %ax,%ax
 804833c:	66 90                	xchg   %ax,%ax
 804833e:	66 90                	xchg   %ax,%ax

08048340 <__x86.get_pc_thunk.bx>:
 8048340:	8b 1c 24             	mov    (%esp),%ebx
 8048343:	c3                   	ret    
 8048344:	66 90                	xchg   %ax,%ax
 8048346:	66 90                	xchg   %ax,%ax
 8048348:	66 90                	xchg   %ax,%ax
 804834a:	66 90                	xchg   %ax,%ax
 804834c:	66 90                	xchg   %ax,%ax
 804834e:	66 90                	xchg   %ax,%ax

08048350 <deregister_tm_clones>:
 8048350:	b8 3f a0 04 08       	mov    $0x804a03f,%eax
 8048355:	2d 3c a0 04 08       	sub    $0x804a03c,%eax
 804835a:	83 f8 06             	cmp    $0x6,%eax
 804835d:	76 1a                	jbe    8048379 <deregister_tm_clones+0x29>
 804835f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048364:	85 c0                	test   %eax,%eax
 8048366:	74 11                	je     8048379 <deregister_tm_clones+0x29>
 8048368:	55                   	push   %ebp
 8048369:	89 e5                	mov    %esp,%ebp
 804836b:	83 ec 14             	sub    $0x14,%esp
 804836e:	68 3c a0 04 08       	push   $0x804a03c
 8048373:	ff d0                	call   *%eax
 8048375:	83 c4 10             	add    $0x10,%esp
 8048378:	c9                   	leave  
 8048379:	f3 c3                	repz ret 
 804837b:	90                   	nop
 804837c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048380 <register_tm_clones>:
 8048380:	b8 3c a0 04 08       	mov    $0x804a03c,%eax
 8048385:	2d 3c a0 04 08       	sub    $0x804a03c,%eax
 804838a:	c1 f8 02             	sar    $0x2,%eax
 804838d:	89 c2                	mov    %eax,%edx
 804838f:	c1 ea 1f             	shr    $0x1f,%edx
 8048392:	01 d0                	add    %edx,%eax
 8048394:	d1 f8                	sar    %eax
 8048396:	74 1b                	je     80483b3 <register_tm_clones+0x33>
 8048398:	ba 00 00 00 00       	mov    $0x0,%edx
 804839d:	85 d2                	test   %edx,%edx
 804839f:	74 12                	je     80483b3 <register_tm_clones+0x33>
 80483a1:	55                   	push   %ebp
 80483a2:	89 e5                	mov    %esp,%ebp
 80483a4:	83 ec 10             	sub    $0x10,%esp
 80483a7:	50                   	push   %eax
 80483a8:	68 3c a0 04 08       	push   $0x804a03c
 80483ad:	ff d2                	call   *%edx
 80483af:	83 c4 10             	add    $0x10,%esp
 80483b2:	c9                   	leave  
 80483b3:	f3 c3                	repz ret 
 80483b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483c0 <__do_global_dtors_aux>:
 80483c0:	80 3d 3b a0 04 08 00 	cmpb   $0x0,0x804a03b
 80483c7:	75 13                	jne    80483dc <__do_global_dtors_aux+0x1c>
 80483c9:	55                   	push   %ebp
 80483ca:	89 e5                	mov    %esp,%ebp
 80483cc:	83 ec 08             	sub    $0x8,%esp
 80483cf:	e8 7c ff ff ff       	call   8048350 <deregister_tm_clones>
 80483d4:	c6 05 3b a0 04 08 01 	movb   $0x1,0x804a03b
 80483db:	c9                   	leave  
 80483dc:	f3 c3                	repz ret 
 80483de:	66 90                	xchg   %ax,%ax

080483e0 <frame_dummy>:
 80483e0:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 80483e5:	8b 10                	mov    (%eax),%edx
 80483e7:	85 d2                	test   %edx,%edx
 80483e9:	75 05                	jne    80483f0 <frame_dummy+0x10>
 80483eb:	eb 93                	jmp    8048380 <register_tm_clones>
 80483ed:	8d 76 00             	lea    0x0(%esi),%esi
 80483f0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483f5:	85 d2                	test   %edx,%edx
 80483f7:	74 f2                	je     80483eb <frame_dummy+0xb>
 80483f9:	55                   	push   %ebp
 80483fa:	89 e5                	mov    %esp,%ebp
 80483fc:	83 ec 14             	sub    $0x14,%esp
 80483ff:	50                   	push   %eax
 8048400:	ff d2                	call   *%edx
 8048402:	83 c4 10             	add    $0x10,%esp
 8048405:	c9                   	leave  
 8048406:	e9 75 ff ff ff       	jmp    8048380 <register_tm_clones>

0804840b <main>:
 804840b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804840f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048412:	ff 71 fc             	pushl  -0x4(%ecx)
 8048415:	55                   	push   %ebp
 8048416:	89 e5                	mov    %esp,%ebp
 8048418:	51                   	push   %ecx
 8048419:	83 ec 04             	sub    $0x4,%esp
 804841c:	83 ec 0c             	sub    $0xc,%esp
 804841f:	68 10 85 04 08       	push   $0x8048510
 8048424:	e8 b7 fe ff ff       	call   80482e0 <puts@plt>
 8048429:	83 c4 10             	add    $0x10,%esp
 804842c:	e8 32 00 00 00       	call   8048463 <asmfunc>
 8048431:	83 ec 0c             	sub    $0xc,%esp
 8048434:	68 23 85 04 08       	push   $0x8048523
 8048439:	e8 a2 fe ff ff       	call   80482e0 <puts@plt>
 804843e:	83 c4 10             	add    $0x10,%esp
 8048441:	e8 1d 00 00 00       	call   8048463 <asmfunc>
 8048446:	83 ec 0c             	sub    $0xc,%esp
 8048449:	68 36 85 04 08       	push   $0x8048536
 804844e:	e8 8d fe ff ff       	call   80482e0 <puts@plt>
 8048453:	83 c4 10             	add    $0x10,%esp
 8048456:	b8 00 00 00 00       	mov    $0x0,%eax
 804845b:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804845e:	c9                   	leave  
 804845f:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048462:	c3                   	ret    

08048463 <asmfunc>:
 8048463:	55                   	push   %ebp
 8048464:	89 e5                	mov    %esp,%ebp
 8048466:	60                   	pusha  
 8048467:	b8 04 00 00 00       	mov    $0x4,%eax
 804846c:	bb 01 00 00 00       	mov    $0x1,%ebx
 8048471:	b9 1c a0 04 08       	mov    $0x804a01c,%ecx
 8048476:	ba 1f 00 00 00       	mov    $0x1f,%edx
 804847b:	cd 80                	int    $0x80
 804847d:	61                   	popa   
 804847e:	89 ec                	mov    %ebp,%esp
 8048480:	5d                   	pop    %ebp
 8048481:	c3                   	ret    
 8048482:	66 90                	xchg   %ax,%ax
 8048484:	66 90                	xchg   %ax,%ax
 8048486:	66 90                	xchg   %ax,%ax
 8048488:	66 90                	xchg   %ax,%ax
 804848a:	66 90                	xchg   %ax,%ax
 804848c:	66 90                	xchg   %ax,%ax
 804848e:	66 90                	xchg   %ax,%ax

08048490 <__libc_csu_init>:
 8048490:	55                   	push   %ebp
 8048491:	57                   	push   %edi
 8048492:	56                   	push   %esi
 8048493:	53                   	push   %ebx
 8048494:	e8 a7 fe ff ff       	call   8048340 <__x86.get_pc_thunk.bx>
 8048499:	81 c3 67 1b 00 00    	add    $0x1b67,%ebx
 804849f:	83 ec 0c             	sub    $0xc,%esp
 80484a2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 80484a6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80484ac:	e8 f7 fd ff ff       	call   80482a8 <_init>
 80484b1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80484b7:	29 c6                	sub    %eax,%esi
 80484b9:	c1 fe 02             	sar    $0x2,%esi
 80484bc:	85 f6                	test   %esi,%esi
 80484be:	74 25                	je     80484e5 <__libc_csu_init+0x55>
 80484c0:	31 ff                	xor    %edi,%edi
 80484c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80484c8:	83 ec 04             	sub    $0x4,%esp
 80484cb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80484cf:	ff 74 24 2c          	pushl  0x2c(%esp)
 80484d3:	55                   	push   %ebp
 80484d4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80484db:	83 c7 01             	add    $0x1,%edi
 80484de:	83 c4 10             	add    $0x10,%esp
 80484e1:	39 f7                	cmp    %esi,%edi
 80484e3:	75 e3                	jne    80484c8 <__libc_csu_init+0x38>
 80484e5:	83 c4 0c             	add    $0xc,%esp
 80484e8:	5b                   	pop    %ebx
 80484e9:	5e                   	pop    %esi
 80484ea:	5f                   	pop    %edi
 80484eb:	5d                   	pop    %ebp
 80484ec:	c3                   	ret    
 80484ed:	8d 76 00             	lea    0x0(%esi),%esi

080484f0 <__libc_csu_fini>:
 80484f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080484f4 <_fini>:
 80484f4:	53                   	push   %ebx
 80484f5:	83 ec 08             	sub    $0x8,%esp
 80484f8:	e8 43 fe ff ff       	call   8048340 <__x86.get_pc_thunk.bx>
 80484fd:	81 c3 03 1b 00 00    	add    $0x1b03,%ebx
 8048503:	83 c4 08             	add    $0x8,%esp
 8048506:	5b                   	pop    %ebx
 8048507:	c3                   	ret    

Disassembly of section .rodata:

08048508 <_fp_hw>:
 8048508:	03 00                	add    (%eax),%eax
	...

0804850c <_IO_stdin_used>:
 804850c:	01 00                	add    %eax,(%eax)
 804850e:	02 00                	add    (%eax),%al
 8048510:	62 65 66             	bound  %esp,0x66(%ebp)
 8048513:	6f                   	outsl  %ds:(%esi),(%dx)
 8048514:	72 65                	jb     804857b <__GNU_EH_FRAME_HDR+0x2f>
 8048516:	20 31                	and    %dh,(%ecx)
 8048518:	73 74                	jae    804858e <__GNU_EH_FRAME_HDR+0x42>
 804851a:	20 61 73             	and    %ah,0x73(%ecx)
 804851d:	6d                   	insl   (%dx),%es:(%edi)
 804851e:	66 75 6e             	data16 jne 804858f <__GNU_EH_FRAME_HDR+0x43>
 8048521:	63 00                	arpl   %ax,(%eax)
 8048523:	62 65 66             	bound  %esp,0x66(%ebp)
 8048526:	6f                   	outsl  %ds:(%esi),(%dx)
 8048527:	72 65                	jb     804858e <__GNU_EH_FRAME_HDR+0x42>
 8048529:	20 32                	and    %dh,(%edx)
 804852b:	6e                   	outsb  %ds:(%esi),(%dx)
 804852c:	64 20 61 73          	and    %ah,%fs:0x73(%ecx)
 8048530:	6d                   	insl   (%dx),%es:(%edi)
 8048531:	66 75 6e             	data16 jne 80485a2 <__GNU_EH_FRAME_HDR+0x56>
 8048534:	63 00                	arpl   %ax,(%eax)
 8048536:	63 6f 6d             	arpl   %bp,0x6d(%edi)
 8048539:	70 6c                	jo     80485a7 <__GNU_EH_FRAME_HDR+0x5b>
 804853b:	65 74 65             	gs je  80485a3 <__GNU_EH_FRAME_HDR+0x57>
 804853e:	20 61 6c             	and    %ah,0x6c(%ecx)
 8048541:	6c                   	insb   (%dx),%es:(%edi)
 8048542:	20 61 73             	and    %ah,0x73(%ecx)
 8048545:	6d                   	insl   (%dx),%es:(%edi)
 8048546:	66 75 6e             	data16 jne 80485b7 <__GNU_EH_FRAME_HDR+0x6b>
 8048549:	63 00                	arpl   %ax,(%eax)

Disassembly of section .eh_frame_hdr:

0804854c <__GNU_EH_FRAME_HDR>:
 804854c:	01 1b                	add    %ebx,(%ebx)
 804854e:	03 3b                	add    (%ebx),%edi
 8048550:	28 00                	sub    %al,(%eax)
 8048552:	00 00                	add    %al,(%eax)
 8048554:	04 00                	add    $0x0,%al
 8048556:	00 00                	add    %al,(%eax)
 8048558:	84 fd                	test   %bh,%ch
 804855a:	ff                   	(bad)  
 804855b:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 804855f:	00 bf fe ff ff 68    	add    %bh,0x68fffffe(%edi)
 8048565:	00 00                	add    %al,(%eax)
 8048567:	00 44 ff ff          	add    %al,-0x1(%edi,%edi,8)
 804856b:	ff 94 00 00 00 a4 ff 	call   *-0x5c0000(%eax,%eax,1)
 8048572:	ff                   	(bad)  
 8048573:	ff e0                	jmp    *%eax
 8048575:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048578 <__FRAME_END__-0xc8>:
 8048578:	14 00                	adc    $0x0,%al
 804857a:	00 00                	add    %al,(%eax)
 804857c:	00 00                	add    %al,(%eax)
 804857e:	00 00                	add    %al,(%eax)
 8048580:	01 7a 52             	add    %edi,0x52(%edx)
 8048583:	00 01                	add    %al,(%ecx)
 8048585:	7c 08                	jl     804858f <__GNU_EH_FRAME_HDR+0x43>
 8048587:	01 1b                	add    %ebx,(%ebx)
 8048589:	0c 04                	or     $0x4,%al
 804858b:	04 88                	add    $0x88,%al
 804858d:	01 00                	add    %eax,(%eax)
 804858f:	00 20                	add    %ah,(%eax)
 8048591:	00 00                	add    %al,(%eax)
 8048593:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048596:	00 00                	add    %al,(%eax)
 8048598:	38 fd                	cmp    %bh,%ch
 804859a:	ff                   	(bad)  
 804859b:	ff 30                	pushl  (%eax)
 804859d:	00 00                	add    %al,(%eax)
 804859f:	00 00                	add    %al,(%eax)
 80485a1:	0e                   	push   %cs
 80485a2:	08 46 0e             	or     %al,0xe(%esi)
 80485a5:	0c 4a                	or     $0x4a,%al
 80485a7:	0f 0b                	ud2    
 80485a9:	74 04                	je     80485af <__GNU_EH_FRAME_HDR+0x63>
 80485ab:	78 00                	js     80485ad <__GNU_EH_FRAME_HDR+0x61>
 80485ad:	3f                   	aas    
 80485ae:	1a 3b                	sbb    (%ebx),%bh
 80485b0:	2a 32                	sub    (%edx),%dh
 80485b2:	24 22                	and    $0x22,%al
 80485b4:	28 00                	sub    %al,(%eax)
 80485b6:	00 00                	add    %al,(%eax)
 80485b8:	40                   	inc    %eax
 80485b9:	00 00                	add    %al,(%eax)
 80485bb:	00 4f fe             	add    %cl,-0x2(%edi)
 80485be:	ff                   	(bad)  
 80485bf:	ff 58 00             	lcall  *0x0(%eax)
 80485c2:	00 00                	add    %al,(%eax)
 80485c4:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 80485c8:	00 47 10             	add    %al,0x10(%edi)
 80485cb:	05 02 75 00 43       	add    $0x43007502,%eax
 80485d0:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 80485d4:	06                   	push   %es
 80485d5:	02 45 0c             	add    0xc(%ebp),%al
 80485d8:	01 00                	add    %eax,(%eax)
 80485da:	41                   	inc    %ecx
 80485db:	c5 43 0c             	lds    0xc(%ebx),%eax
 80485de:	04 04                	add    $0x4,%al
 80485e0:	48                   	dec    %eax
 80485e1:	00 00                	add    %al,(%eax)
 80485e3:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
 80485e7:	00 a8 fe ff ff 5d    	add    %ch,0x5dfffffe(%eax)
 80485ed:	00 00                	add    %al,(%eax)
 80485ef:	00 00                	add    %al,(%eax)
 80485f1:	41                   	inc    %ecx
 80485f2:	0e                   	push   %cs
 80485f3:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80485f9:	87 03                	xchg   %eax,(%ebx)
 80485fb:	41                   	inc    %ecx
 80485fc:	0e                   	push   %cs
 80485fd:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048603:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 804860a:	24 44                	and    $0x44,%al
 804860c:	0e                   	push   %cs
 804860d:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048611:	41                   	inc    %ecx
 8048612:	0e                   	push   %cs
 8048613:	30 4d 0e             	xor    %cl,0xe(%ebp)
 8048616:	20 47 0e             	and    %al,0xe(%edi)
 8048619:	14 41                	adc    $0x41,%al
 804861b:	c3                   	ret    
 804861c:	0e                   	push   %cs
 804861d:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048620:	0e                   	push   %cs
 8048621:	0c 41                	or     $0x41,%al
 8048623:	c7                   	(bad)  
 8048624:	0e                   	push   %cs
 8048625:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048628:	0e                   	push   %cs
 8048629:	04 00                	add    $0x0,%al
 804862b:	00 10                	add    %dl,(%eax)
 804862d:	00 00                	add    %al,(%eax)
 804862f:	00 b8 00 00 00 bc    	add    %bh,-0x44000000(%eax)
 8048635:	fe                   	(bad)  
 8048636:	ff                   	(bad)  
 8048637:	ff 02                	incl   (%edx)
 8048639:	00 00                	add    %al,(%eax)
 804863b:	00 00                	add    %al,(%eax)
 804863d:	00 00                	add    %al,(%eax)
	...

08048640 <__FRAME_END__>:
 8048640:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	e0 83                	loopne 8049e8d <__FRAME_END__+0x184d>
 8049f0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	c0                   	.byte 0xc0
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	a8 82                	test   $0x82,%al
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 f4       	or     $0xf4000000,%eax
 8049f29:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	1c 82                	sbb    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	4a                   	dec    %edx
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	10 00                	adc    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 98 82 04 08 11    	add    %bl,0x11080482(%eax)
 8049f9d:	00 00                	add    %al,(%eax)
 8049f9f:	00 90 82 04 08 12    	add    %dl,0x12080482(%eax)
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 70             	ljmp   *0x70(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 66             	ljmp   *0x66(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	e6 82                	out    %al,$0x82
 804a00e:	04 08                	add    $0x8,%al
 804a010:	f6                   	.byte 0xf6
 804a011:	82                   	(bad)  
 804a012:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a014 <__data_start>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <__dso_handle>:
 804a018:	00 00                	add    %al,(%eax)
	...

0804a01c <output>:
 804a01c:	54                   	push   %esp
 804a01d:	68 69 73 20 69       	push   $0x69207369
 804a022:	73 20                	jae    804a044 <__TMC_END__+0x8>
 804a024:	66 72 6f             	data16 jb 804a096 <__TMC_END__+0x5a>
 804a027:	6d                   	insl   (%dx),%es:(%edi)
 804a028:	20 61 73             	and    %ah,0x73(%ecx)
 804a02b:	73 65                	jae    804a092 <__TMC_END__+0x56>
 804a02d:	6d                   	insl   (%dx),%es:(%edi)
 804a02e:	62 6c 79 20          	bound  %ebp,0x20(%ecx,%edi,2)
 804a032:	66 75 6e             	data16 jne 804a0a3 <__TMC_END__+0x67>
 804a035:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 804a039:	6e                   	outsb  %ds:(%esi),(%dx)
 804a03a:	0a                   	.byte 0xa

Disassembly of section .bss:

0804a03b <__bss_start>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048230>
   a:	74 75                	je     81 <_init-0x8048227>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048219>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	34 29                	xor    $0x29,%al
  24:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  2a:	20 32                	and    %dh,(%edx)
  2c:	30 31                	xor    %dh,(%ecx)
  2e:	36 30 36             	xor    %dh,%ss:(%esi)
  31:	30 39                	xor    %bh,(%ecx)
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	0b 84 04 08 58 00 00 	or     0x5808(%esp,%eax,1),%eax
	...
  1f:	00 1c 00             	add    %bl,(%eax,%eax,1)
  22:	00 00                	add    %al,(%eax)
  24:	02 00                	add    (%eax),%al
  26:	9d                   	popf   
  27:	00 00                	add    %al,(%eax)
  29:	00 04 00             	add    %al,(%eax,%eax,1)
  2c:	00 00                	add    %al,(%eax)
  2e:	00 00                	add    %al,(%eax)
  30:	63 84 04 08 1f 00 00 	arpl   %ax,0x1f08(%esp,%eax,1)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	99                   	cltd   
   1:	00 00                	add    %al,(%eax)
   3:	00 04 00             	add    %al,(%eax,%eax,1)
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 01                	add    $0x1,%al
   c:	0e                   	push   %cs
   d:	00 00                	add    %al,(%eax)
   f:	00 0c 9d 00 00 00 bb 	add    %cl,-0x45000000(,%ebx,4)
  16:	00 00                	add    %al,(%eax)
  18:	00 0b                	add    %cl,(%ebx)
  1a:	84 04 08             	test   %al,(%eax,%ecx,1)
  1d:	58                   	pop    %eax
  1e:	00 00                	add    %al,(%eax)
  20:	00 00                	add    %al,(%eax)
  22:	00 00                	add    %al,(%eax)
  24:	00 02                	add    %al,(%edx)
  26:	04 07                	add    $0x7,%al
  28:	73 00                	jae    2a <_init-0x804827e>
  2a:	00 00                	add    %al,(%eax)
  2c:	02 01                	add    (%ecx),%al
  2e:	08 80 00 00 00 02    	or     %al,0x2000000(%eax)
  34:	02 07                	add    (%edi),%al
  36:	a8 00                	test   $0x0,%al
  38:	00 00                	add    %al,(%eax)
  3a:	02 04 07             	add    (%edi,%eax,1),%al
  3d:	6e                   	outsb  %ds:(%esi),(%dx)
  3e:	00 00                	add    %al,(%eax)
  40:	00 02                	add    %al,(%edx)
  42:	01 06                	add    %eax,(%esi)
  44:	82                   	(bad)  
  45:	00 00                	add    %al,(%eax)
  47:	00 02                	add    %al,(%edx)
  49:	02 05 93 00 00 00    	add    0x93,%al
  4f:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
  56:	02 08                	add    (%eax),%cl
  58:	05 00 00 00 00       	add    $0x0,%eax
  5d:	02 08                	add    (%eax),%cl
  5f:	07                   	pop    %es
  60:	69 00 00 00 02 04    	imul   $0x4020000,(%eax),%eax
  66:	05 05 00 00 00       	add    $0x5,%eax
  6b:	02 04 07             	add    (%edi,%eax,1),%al
  6e:	0d 01 00 00 02       	or     $0x2000001,%eax
  73:	01 06                	add    %eax,(%esi)
  75:	89 00                	mov    %eax,(%eax)
  77:	00 00                	add    %al,(%eax)
  79:	04 8e                	add    $0x8e,%al
  7b:	00 00                	add    %al,(%eax)
  7d:	00 01                	add    %al,(%ecx)
  7f:	03 4f 00             	add    0x0(%edi),%ecx
  82:	00 00                	add    %al,(%eax)
  84:	0b 84 04 08 58 00 00 	or     0x5808(%esp,%eax,1),%eax
  8b:	00 01                	add    %al,(%ecx)
  8d:	9c                   	pushf  
  8e:	05 61 00 00 00       	add    $0x61,%eax
  93:	01 07                	add    %eax,(%edi)
  95:	4f                   	dec    %edi
  96:	00 00                	add    %al,(%eax)
  98:	00 06                	add    %al,(%esi)
  9a:	00 00                	add    %al,(%eax)
  9c:	00 81 00 00 00 02    	add    %al,0x2000000(%ecx)
  a2:	00 58 00             	add    %bl,0x0(%eax)
  a5:	00 00                	add    %al,(%eax)
  a7:	04 01                	add    $0x1,%al
  a9:	40                   	inc    %eax
  aa:	00 00                	add    %al,(%eax)
  ac:	00 63 84             	add    %ah,-0x7c(%ebx)
  af:	04 08                	add    $0x8,%al
  b1:	82                   	(bad)  
  b2:	84 04 08             	test   %al,(%eax,%ecx,1)
  b5:	61                   	popa   
  b6:	73 6d                	jae    125 <_init-0x8048183>
  b8:	66 75 6e             	data16 jne 129 <_init-0x804817f>
  bb:	63 31                	arpl   %si,(%ecx)
  bd:	2e 73 00             	jae,pn c0 <_init-0x80481e8>
  c0:	2f                   	das    
  c1:	68 6f 6d 65 2f       	push   $0x2f656d6f
  c6:	6c                   	insb   (%dx),%es:(%edi)
  c7:	61                   	popa   
  c8:	6c                   	insb   (%dx),%es:(%edi)
  c9:	2f                   	das    
  ca:	44                   	inc    %esp
  cb:	65 73 6b             	gs jae 139 <_init-0x804816f>
  ce:	74 6f                	je     13f <_init-0x8048169>
  d0:	70 2f                	jo     101 <_init-0x80481a7>
  d2:	50                   	push   %eax
  d3:	72 6f                	jb     144 <_init-0x8048164>
  d5:	66 65 73 73          	data16 gs jae 14c <_init-0x804815c>
  d9:	69 6f 6e 61 6c 20 41 	imul   $0x41206c61,0x6e(%edi),%ebp
  e0:	73 73                	jae    155 <_init-0x8048153>
  e2:	65 6d                	gs insl (%dx),%es:(%edi)
  e4:	62 6c 79 20          	bound  %ebp,0x20(%ecx,%edi,2)
  e8:	4c                   	dec    %esp
  e9:	61                   	popa   
  ea:	6e                   	outsb  %ds:(%esi),(%dx)
  eb:	67 75 61             	addr16 jne 14f <_init-0x8048159>
  ee:	67 65 2f             	addr16 gs das 
  f1:	43                   	inc    %ebx
  f2:	68 61 70 74 65       	push   $0x65747061
  f7:	72 20                	jb     119 <_init-0x804818f>
  f9:	31 33                	xor    %esi,(%ebx)
  fb:	20 55 73             	and    %dl,0x73(%ebp)
  fe:	69 6e 67 20 49 6e 6c 	imul   $0x6c6e4920,0x67(%esi),%ebp
 105:	69 6e 65 20 41 73 73 	imul   $0x73734120,0x65(%esi),%ebp
 10c:	65 6d                	gs insl (%dx),%es:(%edi)
 10e:	67 6c                	insb   (%dx),%es:(%di)
 110:	79 00                	jns    112 <_init-0x8048196>
 112:	47                   	inc    %edi
 113:	4e                   	dec    %esi
 114:	55                   	push   %ebp
 115:	20 41 53             	and    %al,0x53(%ecx)
 118:	20 32                	and    %dh,(%edx)
 11a:	2e 32 36             	xor    %cs:(%esi),%dh
 11d:	2e 31 00             	xor    %eax,%cs:(%eax)
 120:	01                   	.byte 0x1
 121:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 06                	adc    (%esi),%al
   f:	10 17                	adc    %dl,(%edi)
  11:	00 00                	add    %al,(%eax)
  13:	02 24 00             	add    (%eax,%eax,1),%ah
  16:	0b 0b                	or     (%ebx),%ecx
  18:	3e 0b 03             	or     %ds:(%ebx),%eax
  1b:	0e                   	push   %cs
  1c:	00 00                	add    %al,(%eax)
  1e:	03 24 00             	add    (%eax,%eax,1),%esp
  21:	0b 0b                	or     (%ebx),%ecx
  23:	3e 0b 03             	or     %ds:(%ebx),%eax
  26:	08 00                	or     %al,(%eax)
  28:	00 04 2e             	add    %al,(%esi,%ebp,1)
  2b:	01 3f                	add    %edi,(%edi)
  2d:	19 03                	sbb    %eax,(%ebx)
  2f:	0e                   	push   %cs
  30:	3a 0b                	cmp    (%ebx),%cl
  32:	3b 0b                	cmp    (%ebx),%ecx
  34:	49                   	dec    %ecx
  35:	13 11                	adc    (%ecx),%edx
  37:	01 12                	add    %edx,(%edx)
  39:	06                   	push   %es
  3a:	40                   	inc    %eax
  3b:	18 96 42 19 00 00    	sbb    %dl,0x1942(%esi)
  41:	05 2e 01 3f 19       	add    $0x193f012e,%eax
  46:	03 0e                	add    (%esi),%ecx
  48:	3a 0b                	cmp    (%ebx),%cl
  4a:	3b 0b                	cmp    (%ebx),%ecx
  4c:	49                   	dec    %ecx
  4d:	13 3c 19             	adc    (%ecx,%ebx,1),%edi
  50:	00 00                	add    %al,(%eax)
  52:	06                   	push   %es
  53:	18 00                	sbb    %al,(%eax)
  55:	00 00                	add    %al,(%eax)
  57:	00 01                	add    %al,(%ecx)
  59:	11 00                	adc    %eax,(%eax)
  5b:	10 06                	adc    %al,(%esi)
  5d:	11 01                	adc    %eax,(%ecx)
  5f:	12 01                	adc    (%ecx),%al
  61:	03 08                	add    (%eax),%ecx
  63:	1b 08                	sbb    (%eax),%ecx
  65:	25 08 13 05 00       	and    $0x51308,%eax
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	3c 00                	cmp    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	21 00                	and    %eax,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	01 01                	add    %eax,(%ecx)
   c:	fb                   	sti    
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 6d 61             	add    %ch,0x61(%ebp)
  1e:	69 6e 70 72 6f 67 2e 	imul   $0x2e676f72,0x70(%esi),%ebp
  25:	63 00                	arpl   %ax,(%eax)
  27:	00 00                	add    %al,(%eax)
  29:	00 00                	add    %al,(%eax)
  2b:	00 05 02 0b 84 04    	add    %al,0x4840b02
  31:	08 15 08 14 f3 59    	or     %dl,0x59f31408
  37:	f3 59                	repz pop %ecx
  39:	f3 5a                	repz pop %edx
  3b:	02 08                	add    (%eax),%cl
  3d:	00 01                	add    %al,(%ecx)
  3f:	01 41 00             	add    %eax,0x0(%ecx)
  42:	00 00                	add    %al,(%eax)
  44:	02 00                	add    (%eax),%al
  46:	21 00                	and    %eax,(%eax)
  48:	00 00                	add    %al,(%eax)
  4a:	01 01                	add    %eax,(%ecx)
  4c:	fb                   	sti    
  4d:	0e                   	push   %cs
  4e:	0d 00 01 01 01       	or     $0x1010100,%eax
  53:	01 00                	add    %eax,(%eax)
  55:	00 00                	add    %al,(%eax)
  57:	01 00                	add    %eax,(%eax)
  59:	00 01                	add    %al,(%ecx)
  5b:	00 61 73             	add    %ah,0x73(%ecx)
  5e:	6d                   	insl   (%dx),%es:(%edi)
  5f:	66 75 6e             	data16 jne d0 <_init-0x80481d8>
  62:	63 31                	arpl   %si,(%ecx)
  64:	2e 73 00             	jae,pn 67 <_init-0x8048241>
  67:	00 00                	add    %al,(%eax)
  69:	00 00                	add    %al,(%eax)
  6b:	00 05 02 63 84 04    	add    %al,0x4846302
  71:	08 03                	or     %al,(%ebx)
  73:	0a 01                	or     (%ecx),%al
  75:	21 30                	and    %esi,(%eax)
  77:	22 59 59             	and    0x59(%ecx),%bl
  7a:	59                   	pop    %ecx
  7b:	59                   	pop    %ecx
  7c:	2f                   	das    
  7d:	22 2f                	and    (%edi),%ch
  7f:	22 02                	and    (%edx),%al
  81:	01 00                	add    %eax,(%eax)
  83:	01 01                	add    %eax,(%ecx)

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%edi)
   1:	6f                   	outsl  %ds:(%esi),(%dx)
   2:	6e                   	outsb  %ds:(%esi),(%dx)
   3:	67 20 6c 6f          	and    %ch,0x6f(%si)
   7:	6e                   	outsb  %ds:(%esi),(%dx)
   8:	67 20 69 6e          	and    %ch,0x6e(%bx,%di)
   c:	74 00                	je     e <_init-0x804829a>
   e:	47                   	inc    %edi
   f:	4e                   	dec    %esi
  10:	55                   	push   %ebp
  11:	20 43 31             	and    %al,0x31(%ebx)
  14:	31 20                	xor    %esp,(%eax)
  16:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  1b:	20 32                	and    %dh,(%edx)
  1d:	30 31                	xor    %dh,(%ecx)
  1f:	36 30 36             	xor    %dh,%ss:(%esi)
  22:	30 39                	xor    %bh,(%ecx)
  24:	20 2d 6d 33 32 20    	and    %ch,0x2032336d
  2a:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
  2f:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
  35:	72 69                	jb     a0 <_init-0x8048208>
  37:	63 20                	arpl   %sp,(%eax)
  39:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
  3e:	68 3d 69 36 38       	push   $0x3836693d
  43:	36 20 2d 67 20 2d 66 	and    %ch,%ss:0x662d2067
  4a:	73 74                	jae    c0 <_init-0x80481e8>
  4c:	61                   	popa   
  4d:	63 6b 2d             	arpl   %bp,0x2d(%ebx)
  50:	70 72                	jo     c4 <_init-0x80481e4>
  52:	6f                   	outsl  %ds:(%esi),(%dx)
  53:	74 65                	je     ba <_init-0x80481ee>
  55:	63 74 6f 72          	arpl   %si,0x72(%edi,%ebp,2)
  59:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
  5e:	6e                   	outsb  %ds:(%esi),(%dx)
  5f:	67 00 61 73          	add    %ah,0x73(%bx,%di)
  63:	6d                   	insl   (%dx),%es:(%edi)
  64:	66 75 6e             	data16 jne d5 <_init-0x80481d3>
  67:	63 00                	arpl   %ax,(%eax)
  69:	6c                   	insb   (%dx),%es:(%edi)
  6a:	6f                   	outsl  %ds:(%esi),(%dx)
  6b:	6e                   	outsb  %ds:(%esi),(%dx)
  6c:	67 20 6c 6f          	and    %ch,0x6f(%si)
  70:	6e                   	outsb  %ds:(%esi),(%dx)
  71:	67 20 75 6e          	and    %dh,0x6e(%di)
  75:	73 69                	jae    e0 <_init-0x80481c8>
  77:	67 6e                	outsb  %ds:(%si),(%dx)
  79:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
  7e:	74 00                	je     80 <_init-0x8048228>
  80:	75 6e                	jne    f0 <_init-0x80481b8>
  82:	73 69                	jae    ed <_init-0x80481bb>
  84:	67 6e                	outsb  %ds:(%si),(%dx)
  86:	65 64 20 63 68       	gs and %ah,%fs:0x68(%ebx)
  8b:	61                   	popa   
  8c:	72 00                	jb     8e <_init-0x804821a>
  8e:	6d                   	insl   (%dx),%es:(%edi)
  8f:	61                   	popa   
  90:	69 6e 00 73 68 6f 72 	imul   $0x726f6873,0x0(%esi),%ebp
  97:	74 20                	je     b9 <_init-0x80481ef>
  99:	69 6e 74 00 6d 61 69 	imul   $0x69616d00,0x74(%esi),%ebp
  a0:	6e                   	outsb  %ds:(%esi),(%dx)
  a1:	70 72                	jo     115 <_init-0x8048193>
  a3:	6f                   	outsl  %ds:(%esi),(%dx)
  a4:	67 2e 63 00          	arpl   %ax,%cs:(%bx,%si)
  a8:	73 68                	jae    112 <_init-0x8048196>
  aa:	6f                   	outsl  %ds:(%esi),(%dx)
  ab:	72 74                	jb     121 <_init-0x8048187>
  ad:	20 75 6e             	and    %dh,0x6e(%ebp)
  b0:	73 69                	jae    11b <_init-0x804818d>
  b2:	67 6e                	outsb  %ds:(%si),(%dx)
  b4:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%ecx)
  b9:	74 00                	je     bb <_init-0x80481ed>
  bb:	2f                   	das    
  bc:	68 6f 6d 65 2f       	push   $0x2f656d6f
  c1:	6c                   	insb   (%dx),%es:(%edi)
  c2:	61                   	popa   
  c3:	6c                   	insb   (%dx),%es:(%edi)
  c4:	2f                   	das    
  c5:	44                   	inc    %esp
  c6:	65 73 6b             	gs jae 134 <_init-0x8048174>
  c9:	74 6f                	je     13a <_init-0x804816e>
  cb:	70 2f                	jo     fc <_init-0x80481ac>
  cd:	50                   	push   %eax
  ce:	72 6f                	jb     13f <_init-0x8048169>
  d0:	66 65 73 73          	data16 gs jae 147 <_init-0x8048161>
  d4:	69 6f 6e 61 6c 20 41 	imul   $0x41206c61,0x6e(%edi),%ebp
  db:	73 73                	jae    150 <_init-0x8048158>
  dd:	65 6d                	gs insl (%dx),%es:(%edi)
  df:	62 6c 79 20          	bound  %ebp,0x20(%ecx,%edi,2)
  e3:	4c                   	dec    %esp
  e4:	61                   	popa   
  e5:	6e                   	outsb  %ds:(%esi),(%dx)
  e6:	67 75 61             	addr16 jne 14a <_init-0x804815e>
  e9:	67 65 2f             	addr16 gs das 
  ec:	43                   	inc    %ebx
  ed:	68 61 70 74 65       	push   $0x65747061
  f2:	72 20                	jb     114 <_init-0x8048194>
  f4:	31 33                	xor    %esi,(%ebx)
  f6:	20 55 73             	and    %dl,0x73(%ebp)
  f9:	69 6e 67 20 49 6e 6c 	imul   $0x6c6e4920,0x67(%esi),%ebp
 100:	69 6e 65 20 41 73 73 	imul   $0x73734120,0x65(%esi),%ebp
 107:	65 6d                	gs insl (%dx),%es:(%edi)
 109:	67 6c                	insb   (%dx),%es:(%di)
 10b:	79 00                	jns    10d <_init-0x804819b>
 10d:	73 69                	jae    178 <_init-0x8048130>
 10f:	7a 65                	jp     176 <_init-0x8048132>
 111:	74 79                	je     18c <_init-0x804811c>
 113:	70 65                	jo     17a <_init-0x804812e>
	...
